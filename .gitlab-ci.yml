image: docker:latest

cache:
  paths:
    - vendor/

services:
  - name: docker:dind
    alias: docker
    command: ["--tls=false"]

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - code-quality
  - security
  - deploy

composer:
  stage: build
  image: pavelkrauchuk/php-fpm-8.2-symfony
  variables:
    APP_ENV: test
  script:
    - composer install

php-cs:
  stage: code-quality
  image: pavelkrauchuk/php-fpm-8.2-symfony
  variables:
    APP_ENV: test
  script:
    - php ./vendor/bin/phpcs --report=junit --report-file=php_cs_results.xml ./src
  artifacts:
    reports:
      junit: php_cs_results.xml
    when: always

php-stan:
  stage: code-quality
  image: pavelkrauchuk/php-fpm-8.2-symfony
  variables:
    APP_ENV: test
  script:
    - php vendor/bin/phpstan analyse --error-format=junit src > php_stan_results.xml
  artifacts:
    reports:
      junit: php_stan_results.xml
    when: always

php-psalm:
  stage: code-quality
  image: pavelkrauchuk/php-fpm-8.2-symfony
  variables:
    APP_ENV: test
  script:
    - php ./vendor/bin/psalm --output-format=junit > php_psalm_results.xml
  artifacts:
    reports:
      junit: php_psalm_results.xml
    when: always

security-checker:
  stage: security
  image: pavelkrauchuk/php-fpm-8.2-symfony
  variables:
    APP_ENV: test
  script:
    - wget https://github.com/fabpot/local-php-security-checker/releases/download/v2.0.6/local-php-security-checker_2.0.6_linux_amd64
    - mv local-php-security-checker_2.0.6_linux_amd64 local-php-security-checker
    - chmod +x local-php-security-checker
    - ./local-php-security-checker --no-dev --format=junit > security_checker_results.xml
  artifacts:
    reports:
      junit: security_checker_results.xml
    when: always

ansible-test:
  stage: deploy
  image: pavelkrauchuk/ansible:latest
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - ansible -i deploy/inventory all -m ping -vvv
